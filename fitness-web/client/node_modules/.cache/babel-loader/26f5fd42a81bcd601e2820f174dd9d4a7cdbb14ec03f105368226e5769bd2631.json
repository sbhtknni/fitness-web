{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Maman\\\\git\\\\fitness-web\\\\fitness-web\\\\client\\\\src\\\\componenets\\\\TrainingPageComp\\\\InstructionsFormatter.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InstructionsFormatter(_ref) {\n  let {\n    text\n  } = _ref;\n  const instructions = text.split('#').filter(instruction => instruction.trim() !== '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: instructions.map((instruction, index) => {\n      const parts = instruction.split('$').filter(part => part.trim() !== '');\n      if (parts.length === 1) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", parts[0].trim()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 16\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this);\n      } else {\n        const mainTask = parts[0].trim();\n        const subTasks = parts.slice(1).map(subTask => subTask.trim());\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: mainTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: subTasks.map((subTask, subIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                color: '#616161'\n              },\n              children: subTask\n            }, subIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = InstructionsFormatter;\nexport default InstructionsFormatter;\nvar _c;\n$RefreshReg$(_c, \"InstructionsFormatter\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InstructionsFormatter","_ref","text","instructions","split","filter","instruction","trim","children","map","index","parts","part","length","fileName","_jsxFileName","lineNumber","columnNumber","mainTask","subTasks","slice","subTask","subIndex","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Daniel Maman/git/fitness-web/fitness-web/client/src/componenets/TrainingPageComp/InstructionsFormatter.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction InstructionsFormatter({ text }) {\r\n  const instructions = text.split('#').filter(instruction => instruction.trim() !== '');\r\n\r\n  return (\r\n    <div>\r\n      {instructions.map((instruction, index) => {\r\n        const parts = instruction.split('$').filter(part => part.trim() !== '');\r\n\r\n        if (parts.length === 1) {\r\n          return (\r\n            <p  key={index}>\r\n               <strong> {parts[0].trim()}</strong> \r\n            </p>\r\n          );\r\n        } else {\r\n          const mainTask = parts[0].trim();\r\n          const subTasks = parts.slice(1).map(subTask => subTask.trim());\r\n\r\n          return (\r\n            <div key={index}>\r\n              <strong>{mainTask}</strong>\r\n              <ul  >\r\n                {subTasks.map((subTask, subIndex) => (\r\n                  <li style={{color:'#616161'}} key={subIndex}>\r\n                    {subTask}\r\n                  </li>\r\n                ))}\r\n              </ul >\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InstructionsFormatter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,qBAAqBA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAD,IAAA;EACrC,MAAME,YAAY,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,WAAW,IAAIA,WAAW,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EAErF,oBACER,OAAA;IAAAS,QAAA,EACGL,YAAY,CAACM,GAAG,CAAC,CAACH,WAAW,EAAEI,KAAK,KAAK;MACxC,MAAMC,KAAK,GAAGL,WAAW,CAACF,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACO,IAAI,IAAIA,IAAI,CAACL,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;MAEvE,IAAII,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;QACtB,oBACEd,OAAA;UAAAS,QAAA,eACGT,OAAA;YAAAS,QAAA,GAAQ,GAAC,EAACG,KAAK,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC,GAD7BP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC;MAER,CAAC,MAAM;QACL,MAAMC,QAAQ,GAAGP,KAAK,CAAC,CAAC,CAAC,CAACJ,IAAI,CAAC,CAAC;QAChC,MAAMY,QAAQ,GAAGR,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC,CAACX,GAAG,CAACY,OAAO,IAAIA,OAAO,CAACd,IAAI,CAAC,CAAC,CAAC;QAE9D,oBACER,OAAA;UAAAS,QAAA,gBACET,OAAA;YAAAS,QAAA,EAASU;UAAQ;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAC3BlB,OAAA;YAAAS,QAAA,EACGW,QAAQ,CAACV,GAAG,CAAC,CAACY,OAAO,EAAEC,QAAQ,kBAC9BvB,OAAA;cAAIwB,KAAK,EAAE;gBAACC,KAAK,EAAC;cAAS,CAAE;cAAAhB,QAAA,EAC1Ba;YAAO,GADyBC,QAAQ;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEvC,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAREP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASV,CAAC;MAEV;IACF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACQ,EAAA,GAlCQzB,qBAAqB;AAoC9B,eAAeA,qBAAqB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
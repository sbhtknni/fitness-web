{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Maman\\\\git\\\\fitness-web\\\\fitness-web\\\\client\\\\src\\\\pages\\\\UserHomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MainLayout from \"../layout/MainLayout.jsx\";\nimport ErrorPage from \"./ErrorPage.jsx\";\nimport Footer from \"../componenets/Footer.jsx\";\nimport { MDBCol, MDBContainer, MDBRow, MDBCard, MDBCardBody, MDBCardHeader } from \"mdb-react-ui-kit\";\nimport ProfilePicture from \"../componenets/UserPageComp/ProfilePicture.jsx\";\nimport { getUser } from \"../controller/requests.js\";\nimport { calculateAverage, calculateMax, calculateMin, calculateVariance, calculateStandardDeviation, calculateMedian, calculatePopularName, currentTrainingName, calculateWeightLoss, calculateWeightLossPerProgram } from \"../controller/utils/util_home_page.js\";\nimport GraphComponent from \"../componenets/graphComponent.jsx\";\nimport ChartTrainigGraph from \"../componenets/ChartTrainingGraph.jsx\";\nimport DetailsCard from \"../componenets/UserPageComp/DetailsCard.jsx\";\nimport BigCard from \"../componenets/UserPageComp/BigCard.jsx\";\nimport getURL from \"../assets/assetsUrls.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserHomePage() {\n  _s();\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(true);\n  const [data, setData] = useState({\n    max: 0,\n    min: 0,\n    average: 0,\n    variance: 0,\n    standardDeviation: 0,\n    median: 0,\n    popularName: \"\",\n    currentTraining: \"\",\n    weightLoss: 0,\n    weightLossPerProgram: \"\",\n    worstProgram: \"\"\n  });\n  let weights = [];\n  let dates = [];\n  let trainingNames = [];\n  const fetchUser = async () => {\n    const response = await getUser();\n    if (response === false) {\n      setLoading(false);\n      return;\n    } else {\n      const val = response;\n      setUser(val);\n      setAllData(val);\n      setError(false);\n    }\n\n    // Set loading to false once data is fetched\n  };\n\n  const setAllData = async user => {\n    dates = user.selectedTrainings.map(training => training.startDate);\n    weights = user.selectedTrainings.map(training => training.weight);\n    trainingNames = user.selectedTrainings.map(training => training.name);\n    calculateStatistics(user);\n  };\n  const calculateStatistics = user => {\n    // Update property1\n    const updatedData = {\n      ...data,\n      max: calculateMax(weights),\n      min: calculateMin(weights),\n      average: calculateAverage(weights),\n      variance: calculateVariance(weights),\n      standardDeviation: calculateStandardDeviation(weights),\n      median: calculateMedian(weights),\n      popularName: calculatePopularName(trainingNames),\n      currentTraining: currentTrainingName(trainingNames),\n      weightLoss: calculateWeightLoss(user.selectedTrainings),\n      weightLossPerProgram: calculateWeightLossPerProgram(user.selectedTrainings)\n    };\n    console.log(\"Weights are \", weights.length);\n    setLoading(false);\n    setData(updatedData);\n  };\n  useEffect(() => {\n    async function fetchAllData() {\n      await fetchUser();\n    }\n    fetchAllData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  if (error && !loading) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      toRemove: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading && !error) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      toRemove: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  if (!loading && !error) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          backgroundColor: \"#eee\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MDBContainer, {\n          className: \"py-5\",\n          children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n            children: [/*#__PURE__*/_jsxDEV(ProfilePicture, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n              sm: \"8\",\n              children: [/*#__PURE__*/_jsxDEV(DetailsCard, {\n                user: user,\n                training: data.currentTraining\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n                className: \"row-cols-1 row-cols-md-3 g-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            className: \"row-cols-1 row-cols-md-3 g-4\",\n            children: [/*#__PURE__*/_jsxDEV(BigCard, {\n              title: \"Weight\"\n              // set text to be 'You need to work one more time to see the data' if weights is empty else set it to the data\n              ,\n              text: weights.length = 0 ? \"You need to work one more time to see the data\" : `#Max $${data.max}$ \\n #Min $${data.min}$ \\n #Average $${data.average}$ \\n #Weight Loss $${data.weightLoss}$ \\n`,\n              img_src: getURL(\"weight\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BigCard, {\n              title: \"Statistics\",\n              text: weights.length === 0 ? \"You need to work one more time to see the data\" : `#Varience $${data.variance}$ \\n #Standard Deviation $${data.standardDeviation}$ \\n #Median $${data.median}$ \\n`,\n              img_src: getURL(\"statistics\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BigCard, {\n              title: \"Popular Training\",\n              text: weights.length === 0 ? \"You need to work one more time to see the data\" : `#Popular Training  $${data.popularName}$  #Current Training $${data.currentTraining}$  #Weight Loss Per Program ${data.weightLossPerProgram} \\n `,\n              img_src: getURL(\"workout\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            className: \"py-4\",\n            children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n              sm: \"7\",\n              className: \"h-100\",\n              children: /*#__PURE__*/_jsxDEV(MDBRow, {\n                className: \"py-2\",\n                children: /*#__PURE__*/_jsxDEV(MDBCard, {\n                  className: \"h-100\",\n                  children: [/*#__PURE__*/_jsxDEV(MDBCardHeader, {\n                    className: \"fw-bolder text-center\",\n                    children: \"Weight Linear Graph\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                    children: weights.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"You need to work one more time to see the data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(ChartTrainigGraph, {\n                      selectedTrainings: user.selectedTrainings\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BigCard, {\n              title: \"General information\",\n              text: weights.length === 0 ? \"You need to work one more time to see the data\" : `#Varience $${data.variance}$ \\n #Standard Deviation $${data.standardDeviation}$`,\n              img_src: getURL(\"general-info\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n            className: \"py-2\",\n            children: /*#__PURE__*/_jsxDEV(MDBCard, {\n              className: \"h-100\",\n              children: [/*#__PURE__*/_jsxDEV(MDBCardHeader, {\n                className: \"fw-bolder text-center\",\n                children: \"Weight Linear Graph\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBCardBody, {\n                children: weights.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"You need to work one more time to see the data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(GraphComponent, {\n                  selectedTrainings: user.selectedTrainings\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(UserHomePage, \"WhktUE6+bRpArIni/wBHFoZLTC8=\");\n_c = UserHomePage;\nexport default UserHomePage;\nvar _c;\n$RefreshReg$(_c, \"UserHomePage\");","map":{"version":3,"names":["React","useState","useEffect","MainLayout","ErrorPage","Footer","MDBCol","MDBContainer","MDBRow","MDBCard","MDBCardBody","MDBCardHeader","ProfilePicture","getUser","calculateAverage","calculateMax","calculateMin","calculateVariance","calculateStandardDeviation","calculateMedian","calculatePopularName","currentTrainingName","calculateWeightLoss","calculateWeightLossPerProgram","GraphComponent","ChartTrainigGraph","DetailsCard","BigCard","getURL","jsxDEV","_jsxDEV","UserHomePage","_s","user","setUser","loading","setLoading","error","setError","data","setData","max","min","average","variance","standardDeviation","median","popularName","currentTraining","weightLoss","weightLossPerProgram","worstProgram","weights","dates","trainingNames","fetchUser","response","val","setAllData","selectedTrainings","map","training","startDate","weight","name","calculateStatistics","updatedData","console","log","length","fetchAllData","toRemove","fileName","_jsxFileName","lineNumber","columnNumber","children","style","backgroundColor","className","sm","title","text","img_src","_c","$RefreshReg$"],"sources":["C:/Users/Daniel Maman/git/fitness-web/fitness-web/client/src/pages/UserHomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MainLayout from \"../layout/MainLayout.jsx\";\r\nimport ErrorPage from \"./ErrorPage.jsx\";\r\nimport Footer from \"../componenets/Footer.jsx\";\r\n\r\nimport {\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardHeader,\r\n} from \"mdb-react-ui-kit\";\r\nimport ProfilePicture from \"../componenets/UserPageComp/ProfilePicture.jsx\";\r\nimport { getUser } from \"../controller/requests.js\";\r\nimport {\r\n  calculateAverage,\r\n  calculateMax,\r\n  calculateMin,\r\n  calculateVariance,\r\n  calculateStandardDeviation,\r\n  calculateMedian,\r\n  calculatePopularName,\r\n  currentTrainingName,\r\n  calculateWeightLoss,\r\n  calculateWeightLossPerProgram,\r\n} from \"../controller/utils/util_home_page.js\";\r\nimport GraphComponent from \"../componenets/graphComponent.jsx\";\r\nimport ChartTrainigGraph from \"../componenets/ChartTrainingGraph.jsx\";\r\nimport DetailsCard from \"../componenets/UserPageComp/DetailsCard.jsx\";\r\nimport BigCard from \"../componenets/UserPageComp/BigCard.jsx\";\r\nimport getURL from \"../assets/assetsUrls.js\";\r\n\r\nfunction UserHomePage() {\r\n  const [user, setUser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(true);\r\n  const [data, setData] = useState({\r\n    max: 0,\r\n    min: 0,\r\n    average: 0,\r\n    variance: 0,\r\n    standardDeviation: 0,\r\n    median: 0,\r\n    popularName: \"\",\r\n    currentTraining: \"\",\r\n    weightLoss: 0,\r\n    weightLossPerProgram: \"\",\r\n    worstProgram: \"\",\r\n  });\r\n\r\n  let weights = [];\r\n  let dates = [];\r\n  let trainingNames = [];\r\n\r\n  const fetchUser = async () => {\r\n    const response = await getUser();\r\n    if (response === false) {\r\n      setLoading(false);\r\n      return;\r\n    } else {\r\n      const val = response;\r\n      setUser(val);\r\n      setAllData(val);\r\n      setError(false);\r\n    }\r\n\r\n    // Set loading to false once data is fetched\r\n  };\r\n\r\n  const setAllData = async (user) => {\r\n    dates = user.selectedTrainings.map((training) => training.startDate);\r\n    weights = user.selectedTrainings.map((training) => training.weight);\r\n    trainingNames = user.selectedTrainings.map((training) => training.name);\r\n\r\n    calculateStatistics(user);\r\n  };\r\n\r\n  const calculateStatistics = (user) => {\r\n    // Update property1\r\n    const updatedData = {\r\n      ...data,\r\n      max: calculateMax(weights),\r\n      min: calculateMin(weights),\r\n      average: calculateAverage(weights),\r\n      variance: calculateVariance(weights),\r\n      standardDeviation: calculateStandardDeviation(weights),\r\n      median: calculateMedian(weights),\r\n      popularName: calculatePopularName(trainingNames),\r\n      currentTraining: currentTrainingName(trainingNames),\r\n      weightLoss: calculateWeightLoss(user.selectedTrainings),\r\n      weightLossPerProgram: calculateWeightLossPerProgram(user.selectedTrainings),\r\n    };\r\n    console.log(\"Weights are \", weights.length);\r\n    setLoading(false);\r\n    setData(updatedData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchAllData() {\r\n      await fetchUser();\r\n    }\r\n    fetchAllData();\r\n  }, []); // Empty dependency array to run the effect only once when the component mounts\r\n\r\n  if (error && !loading) {\r\n    return <ErrorPage toRemove={true} />;\r\n  }\r\n  if (loading && !error) {\r\n    return <ErrorPage toRemove={false} />\r\n  }\r\n\r\n  if (!loading && !error) {\r\n    return (\r\n      <MainLayout>\r\n        <section style={{ backgroundColor: \"#eee\" }}>\r\n          <MDBContainer className=\"py-5\">\r\n            <MDBRow>\r\n              {/* Profile Picture Cube */}\r\n              <ProfilePicture user={user} />\r\n              <MDBCol sm=\"8\">\r\n                {/* User Details Card  */}\r\n\r\n                <DetailsCard user={user} training={data.currentTraining} />\r\n                <MDBRow className=\"row-cols-1 row-cols-md-3 g-4\">\r\n                  {/* Include Max and Min Weight */}\r\n                </MDBRow>\r\n              </MDBCol>\r\n            </MDBRow>\r\n\r\n\r\n            <MDBRow className=\"row-cols-1 row-cols-md-3 g-4\">\r\n\r\n              <BigCard\r\n                title=\"Weight\"\r\n                // set text to be 'You need to work one more time to see the data' if weights is empty else set it to the data\r\n                text={            \r\n                  weights.length = 0\r\n                    ? \"You need to work one more time to see the data\"\r\n                    : `#Max $${data.max}$ \\n #Min $${data.min}$ \\n #Average $${data.average}$ \\n #Weight Loss $${data.weightLoss}$ \\n`\r\n                }\r\n                img_src={getURL(\"weight\")}\r\n              />\r\n              <BigCard\r\n                title=\"Statistics\"\r\n                text={\r\n                  weights.length === 0\r\n                    ? \"You need to work one more time to see the data\"\r\n                    : `#Varience $${data.variance}$ \\n #Standard Deviation $${data.standardDeviation}$ \\n #Median $${data.median}$ \\n`\r\n                }\r\n                img_src={getURL(\"statistics\")}\r\n              />\r\n              <BigCard\r\n                title=\"Popular Training\"\r\n                text={\r\n                  weights.length === 0\r\n                    ? \"You need to work one more time to see the data\"\r\n                    : `#Popular Training  $${data.popularName}$  #Current Training $${data.currentTraining}$  #Weight Loss Per Program ${data.weightLossPerProgram} \\n `\r\n                }\r\n                img_src={getURL(\"workout\")}\r\n              />\r\n            </MDBRow>\r\n\r\n            <MDBRow className=\"py-4\">\r\n              <MDBCol sm=\"7\" className=\"h-100\">\r\n                <MDBRow className=\"py-2\">\r\n                  <MDBCard className=\"h-100\">\r\n                    <MDBCardHeader className=\"fw-bolder text-center\">\r\n                      Weight Linear Graph\r\n                    </MDBCardHeader>\r\n                    <MDBCardBody>\r\n                      {weights.length === 0 ? (\r\n                        <p>You need to work one more time to see the data</p>\r\n                      ) : (\r\n                        <ChartTrainigGraph selectedTrainings={user.selectedTrainings} />)}\r\n                    </MDBCardBody>\r\n                  </MDBCard>\r\n                </MDBRow>\r\n              </MDBCol>\r\n              <BigCard\r\n                title=\"General information\"\r\n                text={\r\n                  weights.length === 0\r\n                    ? \"You need to work one more time to see the data\"\r\n                    : `#Varience $${data.variance}$ \\n #Standard Deviation $${data.standardDeviation}$`\r\n                }\r\n                img_src={getURL(\"general-info\")}\r\n              />\r\n            </MDBRow>\r\n\r\n            <MDBRow className=\"py-2\">\r\n              <MDBCard className=\"h-100\">\r\n                <MDBCardHeader className=\"fw-bolder text-center\">\r\n                  Weight Linear Graph\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                  {weights.length === 0 ? (\r\n                    <p>You need to work one more time to see the data</p>\r\n                  ) : (\r\n                    <GraphComponent selectedTrainings={user.selectedTrainings} />\r\n                  )}\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            </MDBRow>\r\n            <hr />\r\n            <Footer />\r\n          </MDBContainer>\r\n        </section>\r\n      </MainLayout>\r\n    );\r\n  }\r\n\r\n}\r\nexport default UserHomePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
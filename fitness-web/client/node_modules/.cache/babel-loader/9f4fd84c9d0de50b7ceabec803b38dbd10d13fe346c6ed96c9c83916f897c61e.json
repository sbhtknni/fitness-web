{"ast":null,"code":"//This page will include all the requests to the backend\n\nimport axios from \"axios\";\nconst access_token = localStorage.getItem(\"access_token\");\nconst format = {\n  baseUrl: \"https://fitness-api-7tqf.onrender.com\",\n  headers: {\n    Authorization: `Bearer ${access_token}`\n  }\n};\n\n//Create request with parameters\nconst createRequest = (method, url, data) => {\n  return axios({\n    method: method,\n    url: `${format.baseUrl}${url}`,\n    headers: format.headers,\n    data: data\n  });\n};\n\n//----------------------Training----------------------//\n//Get all trainings\nexport const getTrainings = async () => {\n  try {\n    const response = await createRequest(\"get\", \"/trainings\", \"\");\n    return response.data.trainings;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\n//Add training to user\nexport const addTrainingToUser = async (trainingName, new_weight) => {\n  try {\n    const response = await createRequest(\"post\", \"/trainings\", {\n      trainingName: trainingName,\n      new_weight: new_weight\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n\n//----------------------User----------------------//\n//Login\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${format.baseUrl}/auth/login`, {\n      email: email,\n      password: password\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n//Register\nexport const register = async (email, password, firstName, lastName, height, weight) => {\n  try {\n    const response = await axios.post(`${format.baseUrl}/auth/register`, {\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName,\n      height: height,\n      weight: weight\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n};\n//Get user\nexport const getUser = async () => {\n  try {\n    const response = await createRequest(\"get\", `/auth/${localStorage.getItem(\"userId\")}`, \"\");\n    return response.data.user;\n  } catch (error) {\n    console.log(error);\n    console.error(error);\n    return false;\n  }\n};\n\n//----------------------Training Programas----------------------//\nexport const getTrainingProgramas = async muscle => {\n  try {\n    const response = await createRequest(\"get\", `/muscle/${muscle}`, \"\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching muscleInformation:\", error);\n    console.log(error);\n    console.error(error);\n    return [];\n  }\n};\n// Get only name from all Training Programas that in the scema\nexport const getTrainingProgramasName = async () => {\n  try {\n    const response = await createRequest(\"get\", `/muscle`, \"\");\n    //return only the name of the training program\n    return response.data.map(training => training.muscle);\n  } catch (error) {\n    console.error(\"Error fetching muscleInformation:\", error);\n    console.log(error);\n    console.error(error);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","access_token","localStorage","getItem","format","baseUrl","headers","Authorization","createRequest","method","url","data","getTrainings","response","trainings","error","console","addTrainingToUser","trainingName","new_weight","login","email","password","post","register","firstName","lastName","height","weight","getUser","user","log","getTrainingProgramas","muscle","getTrainingProgramasName","map","training"],"sources":["C:/Users/Daniel Maman/git/fitness-web/fitness-web/client/src/controller/requests.js"],"sourcesContent":["//This page will include all the requests to the backend\r\n\r\nimport axios from \"axios\";\r\nconst access_token = localStorage.getItem(\"access_token\");\r\nconst format = {\r\n  baseUrl: \"https://fitness-api-7tqf.onrender.com\",\r\n  headers: {\r\n    Authorization: `Bearer ${access_token}`,\r\n  },\r\n};\r\n\r\n//Create request with parameters\r\nconst createRequest = (method, url, data) => {\r\n  return axios({\r\n    method: method,\r\n    url: `${format.baseUrl}${url}`,\r\n    headers: format.headers,\r\n    data: data,\r\n  });\r\n};\r\n\r\n//----------------------Training----------------------//\r\n//Get all trainings\r\nexport const getTrainings = async () => {\r\n  try {\r\n    const response = await createRequest(\"get\", \"/trainings\", \"\");\r\n\r\n    return response.data.trainings;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n};\r\n\r\n//Add training to user\r\nexport const addTrainingToUser = async (trainingName, new_weight) => {\r\n  try {\r\n    const response = await createRequest(\"post\", \"/trainings\", {\r\n      trainingName: trainingName,\r\n      new_weight: new_weight,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n};\r\n\r\n//----------------------User----------------------//\r\n//Login\r\nexport const login = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${format.baseUrl}/auth/login`, {\r\n      email: email,\r\n      password: password,\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error(error);\r\n\r\n    return false;\r\n  }\r\n};\r\n//Register\r\nexport const register = async (\r\n  email,\r\n  password,\r\n  firstName,\r\n  lastName,\r\n  height,\r\n  weight\r\n) => {\r\n  try {\r\n    const response = await axios.post(`${format.baseUrl}/auth/register`, {\r\n      email: email,\r\n      password: password,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      height: height,\r\n      weight: weight,\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n};\r\n//Get user\r\nexport const getUser = async () => {\r\n  try {\r\n    const response = await createRequest(\r\n      \"get\",\r\n      `/auth/${localStorage.getItem(\"userId\")}`,\r\n      \"\"\r\n    );\r\n    return response.data.user;\r\n  } catch (error) {\r\n    console.log(error);\r\n    console.error(error);\r\n    return false;\r\n  }\r\n};\r\n\r\n//----------------------Training Programas----------------------//\r\nexport const getTrainingProgramas = async (muscle) => {\r\n  try {\r\n    const response = await createRequest(\"get\", `/muscle/${muscle}`, \"\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching muscleInformation:\", error);\r\n    console.log(error);\r\n    console.error(error);\r\n    return [];\r\n  }\r\n};\r\n// Get only name from all Training Programas that in the scema\r\nexport const getTrainingProgramasName = async () => {\r\n  try {\r\n    const response = await createRequest(\"get\", `/muscle`, \"\");\r\n    //return only the name of the training program\r\n    return response.data.map((training) => training.muscle);\r\n  } catch (error) {\r\n    console.error(\"Error fetching muscleInformation:\", error);\r\n    console.log(error);\r\n    console.error(error);\r\n\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
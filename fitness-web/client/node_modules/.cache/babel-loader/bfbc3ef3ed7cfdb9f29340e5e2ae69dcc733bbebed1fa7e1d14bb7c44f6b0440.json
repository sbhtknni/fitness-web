{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel Maman\\\\git\\\\fitness-web\\\\fitness-web\\\\client\\\\src\\\\pages\\\\TrainingPrograms.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MainLayout from \"../layout/MainLayout.jsx\";\nimport { getTrainingProgramas, getTrainingProgramasName } from \"../controller/requests.js\";\nimport ErrorPage from \"./ErrorPage.jsx\";\nimport TPMainComponent from \"../componenets/TrainingProgramsComp/TPMainComponent.jsx\";\nimport Footer from \"..//componenets//Footer.jsx\";\nimport HelpAndTitle from \"../componenets/HelpAndTtile.jsx\";\nimport { MDBRadio, MDBBtnGroup } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainingProgramas = () => {\n  _s();\n  const [muscle, setMuscle] = useState(\"\");\n  const [error, setError] = useState(true);\n  const [data, setData] = useState([]);\n  const [musclesNames, setMusclesNames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [flag, setFlag] = useState(false);\n  const [dataVals, setDataVals] = useState({\n    link: [],\n    topic: [],\n    information: [],\n    generalInformation: \"\"\n  });\n\n  // get all muscles names from DB on first render\n  useEffect(() => {\n    const getDataMusclesNamesFromDB = async () => {\n      await getMusclesNames();\n      setLoading(false);\n    };\n    getDataMusclesNamesFromDB();\n  }, []);\n\n  // get all muscles information from DB\n  useEffect(() => {\n    const getData = async () => {\n      await fetchmuscleInformation();\n    };\n    getData();\n  }, [muscle]);\n\n  // get all muscles names from DB and set it to musclesNames\n  const getMusclesNames = async () => {\n    const response = await getTrainingProgramasName();\n    if (response == false) {\n      console.log(\"response\", response);\n      setLoading(false);\n      return;\n    } else {\n      setError(false);\n      setMusclesNames(response);\n    }\n  };\n\n  // get all muscles information from DB and set it to data\n  const fetchmuscleInformation = async () => {\n    const response = await getTrainingProgramas(muscle);\n    if (response === []) {\n      return;\n    } else {\n      console.log(\"---\", response);\n      setAllData(response);\n      setData(response);\n    }\n  };\n\n  // set all data to dataVals\n  const setAllData = async data => {\n    if (flag === true) {\n      const updatedData = {\n        ...dataVals,\n        link: data.musclesInformation.topics.map(info => info.link),\n        topic: data.musclesInformation.topics.map(info => info.topic),\n        information: data.musclesInformation.topics.map(info => info.information),\n        generalInformation: data.musclesInformation.generalInformation\n      };\n      setDataVals(updatedData);\n    }\n  };\n  // handle muscle change ant flag to true to update dataVals with new data\n  const handleMuscleChange = option => {\n    const selectedMuscle = musclesNames.find(muscle => muscle === option);\n    setMuscle(selectedMuscle);\n    setFlag(true);\n  };\n\n  // if error return error page\n  if (error && !loading) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      toRemove: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 12\n    }, this);\n  }\n  // if loading the data return loading page\n  if (loading && !error) {\n    return /*#__PURE__*/_jsxDEV(ErrorPage, {\n      toRemove: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  if (!loading && !error) {\n    return /*#__PURE__*/_jsxDEV(MainLayout, {\n      children: [/*#__PURE__*/_jsxDEV(HelpAndTitle, {\n        title: \"Muscel Information\",\n        button_name: \"Need Help ?\",\n        headline: \"Muscle Information \",\n        body: \"#Please make sure you choose the muscle that you want to learn about $click on radio button option$\\r #After you choose the muscle you will see the information about the muscle \\r #You can click on the link to see the video about the muscle\\r \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(MDBBtnGroup, {\n        children: [/*#__PURE__*/_jsxDEV(MDBRadio, {\n          btn: true,\n          btnColor: \"secondary\",\n          id: \"btn-radio\",\n          name: \"options\",\n          wrapperTag: \"span\",\n          label: \"Radio button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MDBRadio, {\n          btn: true,\n          btnColor: \"secondary\",\n          id: \"btn-radio2\",\n          name: \"options\",\n          wrapperClass: \"mx-2\",\n          wrapperTag: \"span\",\n          label: \"Radio button\",\n          defaultChecked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MDBRadio, {\n          btn: true,\n          btnColor: \"secondary\",\n          id: \"btn-radio3\",\n          name: \"options\",\n          wrapperTag: \"span\",\n          label: \"Radio button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MDBRadio, {\n          btn: true,\n          btnColor: \"secondary\",\n          id: \"btn-radio3\",\n          name: \"options\",\n          wrapperTag: \"span\",\n          label: \"Radio button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(MDBRadio, {\n          btn: true,\n          btnColor: \"secondary\",\n          id: \"btn-radio3\",\n          name: \"options\",\n          wrapperTag: \"span\",\n          label: \"Radio button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TPMainComponent, {\n        musclesNames: musclesNames,\n        muscle: muscle,\n        handleMuscleChange: handleMuscleChange,\n        dataVals: dataVals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(TrainingProgramas, \"2/1Y+X2CpcYco8htHCpvXfiicBo=\");\n_c = TrainingProgramas;\nexport default TrainingProgramas;\nvar _c;\n$RefreshReg$(_c, \"TrainingProgramas\");","map":{"version":3,"names":["React","useState","useEffect","MainLayout","getTrainingProgramas","getTrainingProgramasName","ErrorPage","TPMainComponent","Footer","HelpAndTitle","MDBRadio","MDBBtnGroup","jsxDEV","_jsxDEV","TrainingProgramas","_s","muscle","setMuscle","error","setError","data","setData","musclesNames","setMusclesNames","loading","setLoading","flag","setFlag","dataVals","setDataVals","link","topic","information","generalInformation","getDataMusclesNamesFromDB","getMusclesNames","getData","fetchmuscleInformation","response","console","log","setAllData","updatedData","musclesInformation","topics","map","info","handleMuscleChange","option","selectedMuscle","find","toRemove","fileName","_jsxFileName","lineNumber","columnNumber","children","title","button_name","headline","body","btn","btnColor","id","name","wrapperTag","label","wrapperClass","defaultChecked","_c","$RefreshReg$"],"sources":["C:/Users/Daniel Maman/git/fitness-web/fitness-web/client/src/pages/TrainingPrograms.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MainLayout from \"../layout/MainLayout.jsx\";\r\nimport {\r\n  getTrainingProgramas,\r\n  getTrainingProgramasName,\r\n} from \"../controller/requests.js\";\r\nimport ErrorPage from \"./ErrorPage.jsx\";\r\nimport TPMainComponent from \"../componenets/TrainingProgramsComp/TPMainComponent.jsx\";\r\nimport Footer from \"..//componenets//Footer.jsx\";\r\nimport HelpAndTitle from \"../componenets/HelpAndTtile.jsx\";\r\nimport { MDBRadio, MDBBtnGroup } from 'mdb-react-ui-kit';\r\n\r\n\r\nconst TrainingProgramas = () => {\r\n  const [muscle, setMuscle] = useState(\"\");\r\n  const [error, setError] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [musclesNames, setMusclesNames] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [flag, setFlag] = useState(false);\r\n  const [dataVals, setDataVals] = useState({\r\n    link: [],\r\n    topic: [],\r\n    information: [],\r\n    generalInformation: \"\",\r\n  });\r\n\r\n  // get all muscles names from DB on first render\r\n  useEffect(() => {\r\n    const getDataMusclesNamesFromDB = async () => {\r\n      await getMusclesNames();\r\n      setLoading(false);\r\n\r\n    };\r\n    getDataMusclesNamesFromDB();\r\n  }, []);\r\n\r\n  // get all muscles information from DB\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await fetchmuscleInformation();\r\n    };\r\n    getData();\r\n  }, [muscle]);\r\n\r\n  // get all muscles names from DB and set it to musclesNames\r\n  const getMusclesNames = async () => {\r\n    const response = await getTrainingProgramasName();\r\n    if (response == false) {\r\n      console.log(\"response\", response);\r\n      setLoading(false);\r\n      return;\r\n    } else {\r\n      setError(false);\r\n\r\n      setMusclesNames(response);\r\n    }\r\n  };\r\n\r\n  // get all muscles information from DB and set it to data\r\n  const fetchmuscleInformation = async () => {\r\n    const response = await getTrainingProgramas(muscle);\r\n    if (response === []) {\r\n      return;\r\n    } else {\r\n      console.log(\"---\", response);\r\n      setAllData(response);\r\n      setData(response);\r\n    }\r\n  };\r\n\r\n  // set all data to dataVals\r\n  const setAllData = async (data) => {\r\n    if (flag === true) {\r\n      const updatedData = {\r\n        ...dataVals,\r\n        link: data.musclesInformation.topics.map((info) => info.link),\r\n        topic: data.musclesInformation.topics.map((info) => info.topic),\r\n        information: data.musclesInformation.topics.map(\r\n          (info) => info.information\r\n        ),\r\n        generalInformation: data.musclesInformation.generalInformation,\r\n      };\r\n\r\n      setDataVals(updatedData);\r\n    }\r\n  };\r\n  // handle muscle change ant flag to true to update dataVals with new data\r\n  const handleMuscleChange = (option) => {\r\n    const selectedMuscle = musclesNames.find((muscle) => muscle === option);\r\n    setMuscle(selectedMuscle);\r\n    setFlag(true);\r\n  };\r\n\r\n  // if error return error page\r\n  if (error && !loading) {\r\n    return <ErrorPage toRemove={true} />;\r\n  }\r\n  // if loading the data return loading page\r\n  if (loading && !error) {\r\n    return <ErrorPage toRemove={false} />;\r\n  }\r\n  if (!loading && !error) {\r\n    return (\r\n      <MainLayout>\r\n              <HelpAndTitle\r\n          title=\"Muscel Information\"\r\n            button_name=\"Need Help ?\"\r\n            headline=\"Muscle Information \"\r\n            body=\"#Please make sure you choose the muscle that you want to learn about $click on radio button option$\r\n            #After you choose the muscle you will see the information about the muscle \r\n            #You can click on the link to see the video about the muscle\r\n            \r\n            \"\r\n        />\r\n        <MDBBtnGroup>\r\n      <MDBRadio btn btnColor='secondary' id='btn-radio' name='options' wrapperTag='span' label='Radio button' />\r\n      <MDBRadio\r\n        btn\r\n        btnColor='secondary'\r\n        id='btn-radio2'\r\n        name='options'\r\n        wrapperClass='mx-2'\r\n        wrapperTag='span'\r\n        label='Radio button'\r\n        defaultChecked\r\n      />\r\n      <MDBRadio btn btnColor='secondary' id='btn-radio3' name='options' wrapperTag='span' label='Radio button' />\r\n      <MDBRadio btn btnColor='secondary' id='btn-radio3' name='options' wrapperTag='span' label='Radio button' />\r\n      <MDBRadio btn btnColor='secondary' id='btn-radio3' name='options' wrapperTag='span' label='Radio button' />\r\n    </MDBBtnGroup>\r\n        <TPMainComponent\r\n          musclesNames={musclesNames}\r\n          muscle={muscle}\r\n          handleMuscleChange={handleMuscleChange}\r\n          dataVals={dataVals}\r\n        />\r\n        <Footer />\r\n      </MainLayout>\r\n    );\r\n  }\r\n};\r\nexport default TrainingProgramas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}